// Generated from ipsumUN.g4 by ANTLR 4.7
package classes;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class OptiUNLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, COMENTARIOS=5, LINEA_COMENTARIOS=6, TIPOS=7, 
		BREAK=8, VACIO=9, REAL=10, BOOLEANO=11, ENTERO=12, CADENA=13, CARACTER=14, 
		MAS=15, MENOS=16, MULT=17, DIV=18, MOD=19, POTEN=20, MAYOR=21, MAYORIGUAL=22, 
		MENOR=23, MENORIGUAL=24, IGUALDAD=25, DIFERENTE=26, IGUAL=27, FLECHA=28, 
		DOSPUNTOS=29, PUNTOYCOMA=30, PARENTIZ=31, PARENTDER=32, CORCHETEIZ=33, 
		CORCHETEDER=34, LLAVEIZ=35, LLAVEDER=36, PUNTO=37, OR=38, AND=39, NOT=40, 
		COMA=41, MAXIMIZAR=42, MINIMIZAR=43, IMPRIMIR=44, LEER=45, SI=46, ENTONCES=47, 
		SINO_SI=48, SINO=49, PARA=50, MIENTRAS=51, HACER=52, FUNCION=53, RETORNAR=54, 
		MIN=55, MAX=56, TECHO=57, PISO=58, SQRT=59, ABS=60, LOG=61, LOG10=62, 
		ID=63, WS=64;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "COMENTARIOS", "LINEA_COMENTARIOS", "TIPOS", 
		"BREAK", "VACIO", "REAL", "BOOLEANO", "ENTERO", "CADENA", "CARACTER", 
		"MAS", "MENOS", "MULT", "DIV", "MOD", "POTEN", "MAYOR", "MAYORIGUAL", 
		"MENOR", "MENORIGUAL", "IGUALDAD", "DIFERENTE", "IGUAL", "FLECHA", "DOSPUNTOS", 
		"PUNTOYCOMA", "PARENTIZ", "PARENTDER", "CORCHETEIZ", "CORCHETEDER", "LLAVEIZ", 
		"LLAVEDER", "PUNTO", "OR", "AND", "NOT", "COMA", "MAXIMIZAR", "MINIMIZAR", 
		"IMPRIMIR", "LEER", "SI", "ENTONCES", "SINO_SI", "SINO", "PARA", "MIENTRAS", 
		"HACER", "FUNCION", "RETORNAR", "MIN", "MAX", "TECHO", "PISO", "SQRT", 
		"ABS", "LOG", "LOG10", "ID", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'principal'", "'fin_principal'", "'0'", "'Restricciones'", null, 
		null, null, "'romper'", "'nulo'", null, null, null, null, null, "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'^'", "'>'", "'>='", "'<'", "'<='", "'=='", 
		"'!='", "'='", "'->'", "':'", "';'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'", "'.'", "'||'", "'&&'", "'!'", "','", "'maximizar'", "'minimizar'", 
		"'imprimir'", "'leer'", "'si'", "'entonces'", "'sino_si'", "'si_no'", 
		"'para'", "'mientras'", "'hacer'", "'funcion'", "'devolver'", "'min'", 
		"'max'", "'techo'", "'piso'", "'raiz2'", "'abs'", "'log'", "'log10'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, "COMENTARIOS", "LINEA_COMENTARIOS", "TIPOS", 
		"BREAK", "VACIO", "REAL", "BOOLEANO", "ENTERO", "CADENA", "CARACTER", 
		"MAS", "MENOS", "MULT", "DIV", "MOD", "POTEN", "MAYOR", "MAYORIGUAL", 
		"MENOR", "MENORIGUAL", "IGUALDAD", "DIFERENTE", "IGUAL", "FLECHA", "DOSPUNTOS", 
		"PUNTOYCOMA", "PARENTIZ", "PARENTDER", "CORCHETEIZ", "CORCHETEDER", "LLAVEIZ", 
		"LLAVEDER", "PUNTO", "OR", "AND", "NOT", "COMA", "MAXIMIZAR", "MINIMIZAR", 
		"IMPRIMIR", "LEER", "SI", "ENTONCES", "SINO_SI", "SINO", "PARA", "MIENTRAS", 
		"HACER", "FUNCION", "RETORNAR", "MIN", "MAX", "TECHO", "PISO", "SQRT", 
		"ABS", "LOG", "LOG10", "ID", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OptiUNLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ipsumUN.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2B\u01f5\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\7\6\u00b0"+
		"\n\6\f\6\16\6\u00b3\13\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\7\7\u00be"+
		"\n\7\f\7\16\7\u00c1\13\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\5\b\u00e5\n\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n"+
		"\3\n\3\n\3\n\3\13\7\13\u00f4\n\13\f\13\16\13\u00f7\13\13\3\13\3\13\6\13"+
		"\u00fb\n\13\r\13\16\13\u00fc\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\f\3\f\3\f\5\f\u010d\n\f\3\r\6\r\u0110\n\r\r\r\16\r\u0111\3\16\3\16"+
		"\3\16\3\16\7\16\u0118\n\16\f\16\16\16\u011b\13\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3"+
		"\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+"+
		"\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64"+
		"\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\3"+
		"9\39\39\39\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3=\3=\3"+
		"=\3=\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3@\3@\7@\u01ea\n@\f@\16@\u01ed\13@"+
		"\3A\6A\u01f0\nA\rA\16A\u01f1\3A\3A\3\u00b1\2B\3\3\5\4\7\5\t\6\13\7\r\b"+
		"\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26"+
		"+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S"+
		"+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\3\2\n\4\2\f\f\17\17\3\2\62;\3\2\60\60\5\2\f\f\17\17$$\3\2))\4\2C\\c"+
		"|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u0202\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"+
		"\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2"+
		"\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2"+
		"s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177"+
		"\3\2\2\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u008d\3\2\2\2\7\u009b\3\2\2"+
		"\2\t\u009d\3\2\2\2\13\u00ab\3\2\2\2\r\u00b9\3\2\2\2\17\u00e4\3\2\2\2\21"+
		"\u00e6\3\2\2\2\23\u00ed\3\2\2\2\25\u00f5\3\2\2\2\27\u010c\3\2\2\2\31\u010f"+
		"\3\2\2\2\33\u0113\3\2\2\2\35\u011e\3\2\2\2\37\u0122\3\2\2\2!\u0124\3\2"+
		"\2\2#\u0126\3\2\2\2%\u0128\3\2\2\2\'\u012a\3\2\2\2)\u012c\3\2\2\2+\u012e"+
		"\3\2\2\2-\u0130\3\2\2\2/\u0133\3\2\2\2\61\u0135\3\2\2\2\63\u0138\3\2\2"+
		"\2\65\u013b\3\2\2\2\67\u013e\3\2\2\29\u0140\3\2\2\2;\u0143\3\2\2\2=\u0145"+
		"\3\2\2\2?\u0147\3\2\2\2A\u0149\3\2\2\2C\u014b\3\2\2\2E\u014d\3\2\2\2G"+
		"\u014f\3\2\2\2I\u0151\3\2\2\2K\u0153\3\2\2\2M\u0155\3\2\2\2O\u0158\3\2"+
		"\2\2Q\u015b\3\2\2\2S\u015d\3\2\2\2U\u015f\3\2\2\2W\u0169\3\2\2\2Y\u0173"+
		"\3\2\2\2[\u017c\3\2\2\2]\u0181\3\2\2\2_\u0184\3\2\2\2a\u018d\3\2\2\2c"+
		"\u0195\3\2\2\2e\u019b\3\2\2\2g\u01a0\3\2\2\2i\u01a9\3\2\2\2k\u01af\3\2"+
		"\2\2m\u01b7\3\2\2\2o\u01c0\3\2\2\2q\u01c4\3\2\2\2s\u01c8\3\2\2\2u\u01ce"+
		"\3\2\2\2w\u01d3\3\2\2\2y\u01d9\3\2\2\2{\u01dd\3\2\2\2}\u01e1\3\2\2\2\177"+
		"\u01e7\3\2\2\2\u0081\u01ef\3\2\2\2\u0083\u0084\7r\2\2\u0084\u0085\7t\2"+
		"\2\u0085\u0086\7k\2\2\u0086\u0087\7p\2\2\u0087\u0088\7e\2\2\u0088\u0089"+
		"\7k\2\2\u0089\u008a\7r\2\2\u008a\u008b\7c\2\2\u008b\u008c\7n\2\2\u008c"+
		"\4\3\2\2\2\u008d\u008e\7h\2\2\u008e\u008f\7k\2\2\u008f\u0090\7p\2\2\u0090"+
		"\u0091\7a\2\2\u0091\u0092\7r\2\2\u0092\u0093\7t\2\2\u0093\u0094\7k\2\2"+
		"\u0094\u0095\7p\2\2\u0095\u0096\7e\2\2\u0096\u0097\7k\2\2\u0097\u0098"+
		"\7r\2\2\u0098\u0099\7c\2\2\u0099\u009a\7n\2\2\u009a\6\3\2\2\2\u009b\u009c"+
		"\7\62\2\2\u009c\b\3\2\2\2\u009d\u009e\7T\2\2\u009e\u009f\7g\2\2\u009f"+
		"\u00a0\7u\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3\7k\2\2"+
		"\u00a3\u00a4\7e\2\2\u00a4\u00a5\7e\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7"+
		"\7q\2\2\u00a7\u00a8\7p\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7u\2\2\u00aa"+
		"\n\3\2\2\2\u00ab\u00ac\7\61\2\2\u00ac\u00ad\7,\2\2\u00ad\u00b1\3\2\2\2"+
		"\u00ae\u00b0\13\2\2\2\u00af\u00ae\3\2\2\2\u00b0\u00b3\3\2\2\2\u00b1\u00b2"+
		"\3\2\2\2\u00b1\u00af\3\2\2\2\u00b2\u00b4\3\2\2\2\u00b3\u00b1\3\2\2\2\u00b4"+
		"\u00b5\7,\2\2\u00b5\u00b6\7\61\2\2\u00b6\u00b7\3\2\2\2\u00b7\u00b8\b\6"+
		"\2\2\u00b8\f\3\2\2\2\u00b9\u00ba\7\61\2\2\u00ba\u00bb\7\61\2\2\u00bb\u00bf"+
		"\3\2\2\2\u00bc\u00be\n\2\2\2\u00bd\u00bc\3\2\2\2\u00be\u00c1\3\2\2\2\u00bf"+
		"\u00bd\3\2\2\2\u00bf\u00c0\3\2\2\2\u00c0\u00c2\3\2\2\2\u00c1\u00bf\3\2"+
		"\2\2\u00c2\u00c3\b\7\2\2\u00c3\16\3\2\2\2\u00c4\u00c5\7d\2\2\u00c5\u00c6"+
		"\7q\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9\7g\2\2\u00c9"+
		"\u00ca\7c\2\2\u00ca\u00cb\7p\2\2\u00cb\u00e5\7q\2\2\u00cc\u00cd\7g\2\2"+
		"\u00cd\u00ce\7p\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1"+
		"\7t\2\2\u00d1\u00e5\7q\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7g\2\2\u00d4"+
		"\u00d5\7c\2\2\u00d5\u00e5\7n\2\2\u00d6\u00d7\7e\2\2\u00d7\u00d8\7c\2\2"+
		"\u00d8\u00d9\7f\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7p\2\2\u00db\u00e5"+
		"\7c\2\2\u00dc\u00dd\7e\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7t\2\2\u00df"+
		"\u00e0\7c\2\2\u00e0\u00e1\7e\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7g\2\2"+
		"\u00e3\u00e5\7t\2\2\u00e4\u00c4\3\2\2\2\u00e4\u00cc\3\2\2\2\u00e4\u00d2"+
		"\3\2\2\2\u00e4\u00d6\3\2\2\2\u00e4\u00dc\3\2\2\2\u00e5\20\3\2\2\2\u00e6"+
		"\u00e7\7t\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7o\2\2\u00e9\u00ea\7r\2\2"+
		"\u00ea\u00eb\7g\2\2\u00eb\u00ec\7t\2\2\u00ec\22\3\2\2\2\u00ed\u00ee\7"+
		"p\2\2\u00ee\u00ef\7w\2\2\u00ef\u00f0\7n\2\2\u00f0\u00f1\7q\2\2\u00f1\24"+
		"\3\2\2\2\u00f2\u00f4\t\3\2\2\u00f3\u00f2\3\2\2\2\u00f4\u00f7\3\2\2\2\u00f5"+
		"\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f8\3\2\2\2\u00f7\u00f5\3\2"+
		"\2\2\u00f8\u00fa\t\4\2\2\u00f9\u00fb\t\3\2\2\u00fa\u00f9\3\2\2\2\u00fb"+
		"\u00fc\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\26\3\2\2"+
		"\2\u00fe\u00ff\7x\2\2\u00ff\u0100\7g\2\2\u0100\u0101\7t\2\2\u0101\u0102"+
		"\7f\2\2\u0102\u0103\7c\2\2\u0103\u0104\7f\2\2\u0104\u0105\7g\2\2\u0105"+
		"\u0106\7t\2\2\u0106\u010d\7q\2\2\u0107\u0108\7h\2\2\u0108\u0109\7c\2\2"+
		"\u0109\u010a\7n\2\2\u010a\u010b\7u\2\2\u010b\u010d\7q\2\2\u010c\u00fe"+
		"\3\2\2\2\u010c\u0107\3\2\2\2\u010d\30\3\2\2\2\u010e\u0110\t\3\2\2\u010f"+
		"\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2"+
		"\2\2\u0112\32\3\2\2\2\u0113\u0119\7$\2\2\u0114\u0118\n\5\2\2\u0115\u0116"+
		"\7$\2\2\u0116\u0118\7$\2\2\u0117\u0114\3\2\2\2\u0117\u0115\3\2\2\2\u0118"+
		"\u011b\3\2\2\2\u0119\u0117\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u011c\3\2"+
		"\2\2\u011b\u0119\3\2\2\2\u011c\u011d\7$\2\2\u011d\34\3\2\2\2\u011e\u011f"+
		"\t\6\2\2\u011f\u0120\n\6\2\2\u0120\u0121\t\6\2\2\u0121\36\3\2\2\2\u0122"+
		"\u0123\7-\2\2\u0123 \3\2\2\2\u0124\u0125\7/\2\2\u0125\"\3\2\2\2\u0126"+
		"\u0127\7,\2\2\u0127$\3\2\2\2\u0128\u0129\7\61\2\2\u0129&\3\2\2\2\u012a"+
		"\u012b\7\'\2\2\u012b(\3\2\2\2\u012c\u012d\7`\2\2\u012d*\3\2\2\2\u012e"+
		"\u012f\7@\2\2\u012f,\3\2\2\2\u0130\u0131\7@\2\2\u0131\u0132\7?\2\2\u0132"+
		".\3\2\2\2\u0133\u0134\7>\2\2\u0134\60\3\2\2\2\u0135\u0136\7>\2\2\u0136"+
		"\u0137\7?\2\2\u0137\62\3\2\2\2\u0138\u0139\7?\2\2\u0139\u013a\7?\2\2\u013a"+
		"\64\3\2\2\2\u013b\u013c\7#\2\2\u013c\u013d\7?\2\2\u013d\66\3\2\2\2\u013e"+
		"\u013f\7?\2\2\u013f8\3\2\2\2\u0140\u0141\7/\2\2\u0141\u0142\7@\2\2\u0142"+
		":\3\2\2\2\u0143\u0144\7<\2\2\u0144<\3\2\2\2\u0145\u0146\7=\2\2\u0146>"+
		"\3\2\2\2\u0147\u0148\7*\2\2\u0148@\3\2\2\2\u0149\u014a\7+\2\2\u014aB\3"+
		"\2\2\2\u014b\u014c\7}\2\2\u014cD\3\2\2\2\u014d\u014e\7\177\2\2\u014eF"+
		"\3\2\2\2\u014f\u0150\7]\2\2\u0150H\3\2\2\2\u0151\u0152\7_\2\2\u0152J\3"+
		"\2\2\2\u0153\u0154\7\60\2\2\u0154L\3\2\2\2\u0155\u0156\7~\2\2\u0156\u0157"+
		"\7~\2\2\u0157N\3\2\2\2\u0158\u0159\7(\2\2\u0159\u015a\7(\2\2\u015aP\3"+
		"\2\2\2\u015b\u015c\7#\2\2\u015cR\3\2\2\2\u015d\u015e\7.\2\2\u015eT\3\2"+
		"\2\2\u015f\u0160\7o\2\2\u0160\u0161\7c\2\2\u0161\u0162\7z\2\2\u0162\u0163"+
		"\7k\2\2\u0163\u0164\7o\2\2\u0164\u0165\7k\2\2\u0165\u0166\7|\2\2\u0166"+
		"\u0167\7c\2\2\u0167\u0168\7t\2\2\u0168V\3\2\2\2\u0169\u016a\7o\2\2\u016a"+
		"\u016b\7k\2\2\u016b\u016c\7p\2\2\u016c\u016d\7k\2\2\u016d\u016e\7o\2\2"+
		"\u016e\u016f\7k\2\2\u016f\u0170\7|\2\2\u0170\u0171\7c\2\2\u0171\u0172"+
		"\7t\2\2\u0172X\3\2\2\2\u0173\u0174\7k\2\2\u0174\u0175\7o\2\2\u0175\u0176"+
		"\7r\2\2\u0176\u0177\7t\2\2\u0177\u0178\7k\2\2\u0178\u0179\7o\2\2\u0179"+
		"\u017a\7k\2\2\u017a\u017b\7t\2\2\u017bZ\3\2\2\2\u017c\u017d\7n\2\2\u017d"+
		"\u017e\7g\2\2\u017e\u017f\7g\2\2\u017f\u0180\7t\2\2\u0180\\\3\2\2\2\u0181"+
		"\u0182\7u\2\2\u0182\u0183\7k\2\2\u0183^\3\2\2\2\u0184\u0185\7g\2\2\u0185"+
		"\u0186\7p\2\2\u0186\u0187\7v\2\2\u0187\u0188\7q\2\2\u0188\u0189\7p\2\2"+
		"\u0189\u018a\7e\2\2\u018a\u018b\7g\2\2\u018b\u018c\7u\2\2\u018c`\3\2\2"+
		"\2\u018d\u018e\7u\2\2\u018e\u018f\7k\2\2\u018f\u0190\7p\2\2\u0190\u0191"+
		"\7q\2\2\u0191\u0192\7a\2\2\u0192\u0193\7u\2\2\u0193\u0194\7k\2\2\u0194"+
		"b\3\2\2\2\u0195\u0196\7u\2\2\u0196\u0197\7k\2\2\u0197\u0198\7a\2\2\u0198"+
		"\u0199\7p\2\2\u0199\u019a\7q\2\2\u019ad\3\2\2\2\u019b\u019c\7r\2\2\u019c"+
		"\u019d\7c\2\2\u019d\u019e\7t\2\2\u019e\u019f\7c\2\2\u019ff\3\2\2\2\u01a0"+
		"\u01a1\7o\2\2\u01a1\u01a2\7k\2\2\u01a2\u01a3\7g\2\2\u01a3\u01a4\7p\2\2"+
		"\u01a4\u01a5\7v\2\2\u01a5\u01a6\7t\2\2\u01a6\u01a7\7c\2\2\u01a7\u01a8"+
		"\7u\2\2\u01a8h\3\2\2\2\u01a9\u01aa\7j\2\2\u01aa\u01ab\7c\2\2\u01ab\u01ac"+
		"\7e\2\2\u01ac\u01ad\7g\2\2\u01ad\u01ae\7t\2\2\u01aej\3\2\2\2\u01af\u01b0"+
		"\7h\2\2\u01b0\u01b1\7w\2\2\u01b1\u01b2\7p\2\2\u01b2\u01b3\7e\2\2\u01b3"+
		"\u01b4\7k\2\2\u01b4\u01b5\7q\2\2\u01b5\u01b6\7p\2\2\u01b6l\3\2\2\2\u01b7"+
		"\u01b8\7f\2\2\u01b8\u01b9\7g\2\2\u01b9\u01ba\7x\2\2\u01ba\u01bb\7q\2\2"+
		"\u01bb\u01bc\7n\2\2\u01bc\u01bd\7x\2\2\u01bd\u01be\7g\2\2\u01be\u01bf"+
		"\7t\2\2\u01bfn\3\2\2\2\u01c0\u01c1\7o\2\2\u01c1\u01c2\7k\2\2\u01c2\u01c3"+
		"\7p\2\2\u01c3p\3\2\2\2\u01c4\u01c5\7o\2\2\u01c5\u01c6\7c\2\2\u01c6\u01c7"+
		"\7z\2\2\u01c7r\3\2\2\2\u01c8\u01c9\7v\2\2\u01c9\u01ca\7g\2\2\u01ca\u01cb"+
		"\7e\2\2\u01cb\u01cc\7j\2\2\u01cc\u01cd\7q\2\2\u01cdt\3\2\2\2\u01ce\u01cf"+
		"\7r\2\2\u01cf\u01d0\7k\2\2\u01d0\u01d1\7u\2\2\u01d1\u01d2\7q\2\2\u01d2"+
		"v\3\2\2\2\u01d3\u01d4\7t\2\2\u01d4\u01d5\7c\2\2\u01d5\u01d6\7k\2\2\u01d6"+
		"\u01d7\7|\2\2\u01d7\u01d8\7\64\2\2\u01d8x\3\2\2\2\u01d9\u01da\7c\2\2\u01da"+
		"\u01db\7d\2\2\u01db\u01dc\7u\2\2\u01dcz\3\2\2\2\u01dd\u01de\7n\2\2\u01de"+
		"\u01df\7q\2\2\u01df\u01e0\7i\2\2\u01e0|\3\2\2\2\u01e1\u01e2\7n\2\2\u01e2"+
		"\u01e3\7q\2\2\u01e3\u01e4\7i\2\2\u01e4\u01e5\7\63\2\2\u01e5\u01e6\7\62"+
		"\2\2\u01e6~\3\2\2\2\u01e7\u01eb\t\7\2\2\u01e8\u01ea\t\b\2\2\u01e9\u01e8"+
		"\3\2\2\2\u01ea\u01ed\3\2\2\2\u01eb\u01e9\3\2\2\2\u01eb\u01ec\3\2\2\2\u01ec"+
		"\u0080\3\2\2\2\u01ed\u01eb\3\2\2\2\u01ee\u01f0\t\t\2\2\u01ef\u01ee\3\2"+
		"\2\2\u01f0\u01f1\3\2\2\2\u01f1\u01ef\3\2\2\2\u01f1\u01f2\3\2\2\2\u01f2"+
		"\u01f3\3\2\2\2\u01f3\u01f4\bA\2\2\u01f4\u0082\3\2\2\2\16\2\u00b1\u00bf"+
		"\u00e4\u00f5\u00fc\u010c\u0111\u0117\u0119\u01eb\u01f1\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}